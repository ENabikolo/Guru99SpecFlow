2018-01-03T13:38:23.4654474+00:00;VSTestExecutionThread;Info;SpecFlow+Runner execution started
2018-01-03T13:38:23.6023390+00:00;VSTestExecutionThread;Info;SpecRun Evaluation Mode: Please purchase at http://www.specflow.org/plus to remove test execution delay.
2018-01-03T13:38:23.6028407+00:00;VSTestExecutionThread;Info;SpecRun: running tests in C:\Users\Admin\Desktop\Specflow\VSWork\UnitTestProject1\UnitTestProject1\bin\Debug\UnitTestProject1.dll
2018-01-03T13:38:23.6028407+00:00;VSTestExecutionThread;Info;Profile: Default
2018-01-03T13:38:33.7283975+00:00;Thread#12;Info;Discovering target: Default
2018-01-03T13:38:33.7283975+00:00;Thread#12;Info;Discovering tests from assembly: C:\Users\Admin\Desktop\Specflow\VSWork\UnitTestProject1\UnitTestProject1\bin\Debug\UnitTestProject1.dll
Appdomain Disposed
Test Suite Dump
#0: UnitTestProject1/Default - 
#1: Default - 
#2: UnitTestProject1 - 
#3: SpecFlowFeature1 - 
#4: Add two numbers - TestAssembly:UnitTestProject1/Feature:SpecFlowFeature1/Scenario:Add+two+numbers
#5: Subtract two numbers - TestAssembly:UnitTestProject1/Feature:SpecFlowFeature1/Scenario:Subtract+two+numbers
#6: Multiply two numbers - TestAssembly:UnitTestProject1/Feature:SpecFlowFeature1/Scenario:Multiply+two+numbers
End: Test Suite Dump
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #4 from normal test queue 
Thread#0:Scheduler: considering testitem #4 for thread 0
Thread#0:TestItem#4:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#4:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#4:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #4 for thread 0
Thread#0:Scheduler: Test #4 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread #0: creating new test thread executor for UnitTestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Loading SpecRun type 'TechTalk.SpecRun.Framework.TestAssemblyExecutor' from: C:\Users\Admin\AppData\Local\Temp\VisualStudioTestExplorerExtensions\SpecRun.Runner.1.6.3\tools\TechTalk.SpecRun.Framework.Executor.dll
Thread#0: Test #4/0 is started on thread #0
Thread#0:T:-> Using app.config
Thread#0:B:Given I have entered 80 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(80) (0.0s)
Thread#0:B:And I have entered 50 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: SpecFlowFeature1Steps.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 130 on the screen
Thread#0:T:done: SpecFlowFeature1Steps.ThenTheResultShouldBeOnTheScreen(130) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #5 from normal test queue 
Thread#0:Scheduler: considering testitem #5 for thread 0
Thread#0:TestItem#5:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#5:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#5:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #5 for thread 0
Thread#0:Scheduler: Test #5 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #4/0 is finished on thread #0 as Succeeded within 0.2597186 seconds
Thread#0: Test #5/0 is started on thread #0
Thread#0:B:Given I have entered 80 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(80) (0.0s)
Thread#0:B:And I have entered 50 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:When I press subtract
Thread#0:T:done: SpecFlowFeature1Steps.WhenIPressSubtract() (0.0s)
Thread#0:B:Then the result should be 30 on the screen
Thread#0:T:error: Assert.AreEqual failed. Expected:<30>. Actual:<-130>. 
Thread#0:TestItem#5:Scheduler: reschedule tests for testitem #5
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: dequeuing a rescheduled testitem: #5
Thread#0:Scheduler: considering testitem #5 for thread 0
Thread#0:TestItem#5:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#5:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#5:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #5 for thread 0
Thread#0:Scheduler: Test #5 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 1
Thread#0: Test #5/0 is finished on thread #0 as Failed within 0.0190511 seconds
Thread#0: Test #5/1 is started on thread #0
Thread#0:B:Given I have entered 80 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(80) (0.0s)
Thread#0:B:And I have entered 50 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:When I press subtract
Thread#0:T:done: SpecFlowFeature1Steps.WhenIPressSubtract() (0.0s)
Thread#0:B:Then the result should be 30 on the screen
Thread#0:T:error: Assert.AreEqual failed. Expected:<30>. Actual:<-130>. 
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: dequeuing a rescheduled testitem: #5
Thread#0:Scheduler: considering testitem #5 for thread 0
Thread#0:TestItem#5:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#5:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#5:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #5 for thread 0
Thread#0:Scheduler: Test #5 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 2
Thread#0: Test #5/1 is finished on thread #0 as Failed within 0.0020057 seconds
Thread#0: Test #5/2 is started on thread #0
Thread#0:B:Given I have entered 80 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(80) (0.0s)
Thread#0:B:And I have entered 50 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:When I press subtract
Thread#0:T:done: SpecFlowFeature1Steps.WhenIPressSubtract() (0.0s)
Thread#0:B:Then the result should be 30 on the screen
Thread#0:T:error: Assert.AreEqual failed. Expected:<30>. Actual:<-130>. 
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #6 from normal test queue 
Thread#0:Scheduler: considering testitem #6 for thread 0
Thread#0:TestItem#6:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#6:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#6:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #6 for thread 0
Thread#0:Scheduler: Test #6 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #5/2 is finished on thread #0 as Failed within 0.0020047 seconds
Thread#0: Test #6/0 is started on thread #0
Thread#0:B:Given I have entered 4 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(4) (0.0s)
Thread#0:B:And I have entered 25 into the calculator
Thread#0:T:done: SpecFlowFeature1Steps.GivenIHaveEnteredIntoTheCalculator(25) (0.0s)
Thread#0:B:When I press multiply
Thread#0:T:No matching step definition found for the step. Use the following code to create one:
Thread#0:T:        [When(@"I press multiply")]
Thread#0:T:public void WhenIPressMultiply()
Thread#0:T:{
Thread#0:T:    ScenarioContext.Current.Pending();
Thread#0:T:}
Thread#0:B:Then the result should be 100 on the screen
Thread#0:T:skipped because of previous errors
Thread#0:T:Pending: No matching step definition found for one or more steps.
Thread#0:T:using System;
Thread#0:T:using TechTalk.SpecFlow;
Thread#0:T:namespace MyNamespace
Thread#0:T:{
Thread#0:T:    [Binding]
Thread#0:T:    public class StepDefinitions
Thread#0:T:    {
Thread#0:T:        [When(@"I press multiply")]
Thread#0:T:public void WhenIPressMultiply()
Thread#0:T:{
Thread#0:T:    ScenarioContext.Current.Pending();
Thread#0:T:}
Thread#0:T:    }
Thread#0:T:}
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: at the end of normal test queue
Thread#0:Scheduler: enumerator for thread is at end
Thread#0:Scheduler: No more tests for thread
Thread#0: Test #6/0 is finished on thread #0 as Pending within 0.059185 seconds
Appdomain Disposed
Thread#-1:Scheduler: get next test for thread -1
Thread#:Scheduler: at the end of normal test queue
Thread#-1:Scheduler: enumerator for thread is at end
Total: 3 (test executions: 5)
Succeeded: 1
Ignored: 0
Pending: 1
Skipped: 0
Failed: 1
